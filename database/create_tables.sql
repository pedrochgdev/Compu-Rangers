-- Converted from Oracle SQL to MySQL
-- Generated on: 2025-04-22
-- Modifications: Removed TIPO_DE_CAMBIO table, renamed TIPO_CAMBIO_PERIODO to MONEDA_PERIODO, added tipoCambio attribute, added ENGINE=InnoDB, added AUTO_INCREMENT to primary keys, fixed comment syntax
create database if not exists compurangers;

use compurangers;

CREATE TABLE USUARIO (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(20) UNIQUE NOT NULL COMMENT 'USERNAME ÚNICO',
    nombre VARCHAR(150) NOT NULL,
    telefono VARCHAR(15) NOT NULL COMMENT 'FORMATO INTERNACIONAL: +[CÓDIGO][NÚMERO]',
    correo VARCHAR(100) UNIQUE NOT NULL,
    direccion VARCHAR(100) NOT NULL,
    isAdmin boolean NOT NULL,
    password VARCHAR(255) NOT NULL COMMENT 'HASH ALMACENADO',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE ADMIN (
    usuario_id INT PRIMARY KEY,
    fecha_ingreso DATE NOT NULL,
    CONSTRAINT ADMIN_usuario_FK 
        FOREIGN KEY (usuario_id) 
        REFERENCES USUARIO (id)
        ON DELETE CASCADE
) ENGINE=InnoDB;

CREATE TABLE CLIENTE (
    usuario_id INT PRIMARY KEY,
    direccion_envio VARCHAR(100) NOT NULL COMMENT 'DIRECCIÓN PREFERIDA PARA ENVÍOS',
    CONSTRAINT cliente_usuario_FK 
        FOREIGN KEY (usuario_id) 
        REFERENCES USUARIO (id)
        ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE CARRITO (
    id INT AUTO_INCREMENT NOT NULL,
    cantidad_productos INT NOT NULL COMMENT 'CANTIDAD DE PRODUCTOS EN EL CARRITO',
    total DECIMAL(10,2) NOT NULL COMMENT 'COSTO TOTAL DEL CARRITO',
    cliente_usuario_id INT NOT NULL,
    PRIMARY KEY (ID),
    CONSTRAINT CARRITO_cliente_FK 
        FOREIGN KEY (cliente_usuario_id) 
        REFERENCES CLIENTE (usuario_id)
        ON DELETE CASCADE
) ENGINE=InnoDB;

CREATE TABLE CATEGORIA (
    id INT AUTO_INCREMENT NOT NULL,
    nombre VARCHAR(30) CHARACTER SET utf8mb4 NOT NULL COMMENT 'NOMBRE DE LA CATEGORIA',
    padre_id INT,  -- Permite que sea NULL para categorías sin padre
    PRIMARY KEY (id),
    CONSTRAINT fk_padre FOREIGN KEY (padre_id) REFERENCES CATEGORIA(id) ON DELETE SET NULL
) ENGINE=InnoDB;

CREATE TABLE MARCA (
    id INT AUTO_INCREMENT NOT NULL,
    nombre VARCHAR(100) CHARACTER SET utf8mb4 NOT NULL COMMENT 'NOMBRE DE LA MARCA',
    PRIMARY KEY (ID)
) ENGINE=InnoDB;

CREATE TABLE PRODUCTO (
    id INT AUTO_INCREMENT NOT NULL,
    nombre VARCHAR(50) CHARACTER SET utf8mb4 NOT NULL COMMENT 'NOMBRE DEL PRODUCTO',
    descripcion VARCHAR(100) CHARACTER SET utf8mb4 NOT NULL COMMENT 'DESCRIPCION DEL PRODUCTO',
    sku VARCHAR(20) CHARACTER SET utf8mb4 NOT NULL COMMENT 'STOCK KEEPING UNIT("UNIDAD DE MANTENIMIENTO DE STOCK")',
    precio_venta DECIMAL(8,2) NOT NULL COMMENT 'PRECIO DE VENTA DEL PRODUCTO',
    cantidad_ventas INT DEFAULT 0,
    categoria_id INT NOT NULL,
    marca_id INT NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT producto_categoria_FK FOREIGN KEY (categoria_id) REFERENCES CATEGORIA (id),
    CONSTRAINT producto_MARCA_FK FOREIGN KEY (marca_id) REFERENCES MARCA (id)
) ENGINE=InnoDB;

CREATE TABLE DETALLE_CARRITO (
    id INT AUTO_INCREMENT NOT NULL,
    cantidad INT NOT NULL COMMENT 'CANTIDAD SOLICITADA DE UN PRODUCTO',
    subtotal DECIMAL(10,2) NOT NULL COMMENT 'SUBTOTAL DEL CARRITO POR UN PRODUCTO',
    carrito_id INT NOT NULL,
    producto_id INT NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT DETCAR_CARRITO_FK FOREIGN KEY (CARRITO_ID) REFERENCES CARRITO (id),
    CONSTRAINT DETCAR_PRODUCTO_FK FOREIGN KEY (producto_id) REFERENCES PRODUCTO (id)
) ENGINE=InnoDB;

CREATE TABLE PROVEEDOR (
    id INT AUTO_INCREMENT NOT NULL,
    razon_social VARCHAR(100) CHARACTER SET utf8mb4 NOT NULL COMMENT 'RAZON SOCIAL DEL PROVEEDOR',
    PRIMARY KEY (id)
) ENGINE=InnoDB;

CREATE TABLE DOCUMENTO_COMPRAS (
    id INT AUTO_INCREMENT NOT NULL,
    numero INT UNIQUE NOT NULL,
    subtotal DECIMAL(10,2) NOT NULL COMMENT 'SUBTOTAL DEL DOCUMENTO DE COMPRA',
    impuestos DECIMAL(10,2) NOT NULL COMMENT 'IMPUESTOS DEL DOCUMENTO DE COMPRA',
    total DECIMAL(10,2) NOT NULL COMMENT 'TOTAL DEL DOCUMENTO DE COMPRAS',
    proveedor_id INT NOT NULL COMMENT 'IDENTIFICADOR DEL PROVEEDOR',
    PRIMARY KEY (id),
    CONSTRAINT DOCCOM_proveedor_FK FOREIGN KEY (proveedor_id) REFERENCES PROVEEDOR (id)
) ENGINE=InnoDB;

CREATE TABLE LOTE (
    id INT AUTO_INCREMENT NOT NULL,
    fecha_creacion DATE NOT NULL COMMENT 'FECHA DE CREACION DEL LOTE',
	estado ENUM('ABIERTO', 'CERRADO', 'CANCELADO') NOT NULL COMMENT 'ESTADO DEL LOTE',
    documento_compras_numero INT NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT lote_DOCCOM_FK FOREIGN KEY (documento_compras_numero) REFERENCES DOCUMENTO_COMPRAS (numero)
) ENGINE=InnoDB;

CREATE TABLE DETALLE_LOTE (
    id INT AUTO_INCREMENT NOT NULL,
    cantidad INT NOT NULL COMMENT 'CANTIDAD DEL LOTE',
    precio_compra DECIMAL(10,2) NOT NULL COMMENT 'PRECIO DE COMPRA DEL LOTE',
    lote_id INT NOT NULL,
    producto_id INT NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT DETLOT_lote_FK FOREIGN KEY (lote_id) REFERENCES LOTE (id),
    CONSTRAINT DETLOT_producto_FK FOREIGN KEY (producto_id) REFERENCES PRODUCTO (id)
) ENGINE=InnoDB;

CREATE TABLE INVENTARIO (
    id INT AUTO_INCREMENT NOT NULL,
    cantidad_disponible INT NOT NULL COMMENT 'CANTIDAD DISPONIBLE DEL INVENTARIO',
    lote_id INT NOT NULL,
    producto_id INT NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT inventario_lote_FK FOREIGN KEY (lote_id) REFERENCES LOTE (id),
    CONSTRAINT inventario_producto_FK FOREIGN KEY (producto_id) REFERENCES PRODUCTO (id)
) ENGINE=InnoDB;

CREATE TABLE ORDEN_DE_VENTA (
    id INT AUTO_INCREMENT NOT NULL,
    estado ENUM('EN_PROCESO', 'PAGADO', 'ENVIADO', 'ENTREGADO') NOT NULL COMMENT 'ESTADO DE LA ORDEN DE VENTA',
    fecha DATE NOT NULL COMMENT 'FECHA DE REGISTRO DE  LA ORDEN DE VENTA',
    total DECIMAL(8,2) NOT NULL COMMENT 'TOTAL DE LA ORDEN',
    cliente_usuario_id INT NOT NULL,
    direccion VARCHAR(100) CHARACTER SET utf8mb4 NOT NULL COMMENT 'DIRECCION DE ENVIO',
    PRIMARY KEY (id),
    CONSTRAINT ORDVEN_cliente_FK FOREIGN KEY (cliente_usuario_id) REFERENCES CLIENTE (usuario_id)
) ENGINE=InnoDB;

CREATE TABLE DETALLE_VENTA (
    id INT AUTO_INCREMENT NOT NULL,
    cantidad INT NOT NULL COMMENT 'CANTIDAD DE PRODUCTOS',
    subtotal DECIMAL(8,2) NOT NULL COMMENT 'TOTAL DEL DETALLE',
    cantidad_devuelta INT COMMENT 'CANTIDAD DEVUELTA DEL PRODUCTO',
    orden_de_venta_id INT NOT NULL,
    inventario_id INT NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT DETVEN_ORDVEN_FK FOREIGN KEY (orden_de_venta_id) 
        REFERENCES ORDEN_DE_VENTA (id)
        ON DELETE CASCADE,
    CONSTRAINT DETVEN_producto_FK FOREIGN KEY (inventario_id) 
        REFERENCES Inventario (id)
) ENGINE=InnoDB;

CREATE TABLE DOCUMENTO_DE_VENTAS (
    id INT AUTO_INCREMENT NOT NULL,
    numero INT UNIQUE NOT NULL,
    subtotal DECIMAL(10,2) NOT NULL COMMENT 'SUBTOTAL DE LA VENTA',
    impuestos DECIMAL(8,2) NOT NULL COMMENT 'IMPUESTOS DE LA VENTA',
    total DECIMAL(10,2) NOT NULL COMMENT 'TOTAL DE LA VENTA',
    orden_de_venta_id INT NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT DOCVEN_ORDVEN_FK FOREIGN KEY (orden_de_venta_id) REFERENCES ORDEN_DE_VENTA (id)
) ENGINE=InnoDB;

CREATE TABLE ORDEN_DEVOLUCION (
    id INT AUTO_INCREMENT NOT NULL,
    motivo VARCHAR(200) CHARACTER SET utf8mb4 NOT NULL COMMENT 'MOTIVO DE LA DEVOLUCION',
    fecha_registro DATE NOT NULL COMMENT 'FECHA REGISTRADA DE LA DEVOLUCION',
    tipo_devolucion ENUM('REEMBOLSO', 'GIFTCARD') NOT NULL COMMENT 'TIPO DE DEVOLUCION',
    documento_de_ventas_numero INT NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT ORDDEV_DOCVEN_FK FOREIGN KEY (documento_de_ventas_numero) REFERENCES DOCUMENTO_DE_VENTAS (numero)
) ENGINE=InnoDB;

CREATE TABLE DETALLE_DEVOLUCION (
    id INT AUTO_INCREMENT NOT NULL,
    cantidad INT NOT NULL COMMENT 'CANTIDAD DE PRODUCTOS DEVUELTOS',
    detalle_venta_id INT NOT NULL,
    orden_devolucion_id INT NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT DETDEV_DETVEN_FK FOREIGN KEY (detalle_venta_id) REFERENCES DETALLE_VENTA (id),
    CONSTRAINT DETDEV_ORDDEV_FK FOREIGN KEY (orden_devolucion_id) REFERENCES ORDEN_DEVOLUCION (id)
) ENGINE=InnoDB;

CREATE TABLE IMPUESTO (
    id INT AUTO_INCREMENT NOT NULL,
    nombre VARCHAR(50) CHARACTER SET utf8mb4 NOT NULL COMMENT 'NOMBRE DEL IMPUESTO',
    abreviacion VARCHAR(10) CHARACTER SET utf8mb4 NOT NULL COMMENT 'ABREVIACION DEL IMPUESTO',
    tipo ENUM('COMPRA', 'VENTA') NOT NULL COMMENT 'TIPO DEL IMPUESTO',
    PRIMARY KEY (id)
) ENGINE=InnoDB;

CREATE TABLE PERIODO (
    id INT AUTO_INCREMENT NOT NULL,
    fecha_inicio DATE NOT NULL COMMENT 'FECHA DE INICIO DEL PERIODO',
    fecha_fin DATE COMMENT 'FECHA DE FIN DEL PERIODO',
    PRIMARY KEY (id)
) ENGINE=InnoDB;

CREATE TABLE IMPUESTO_PERIODO (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    periodo_id INT NOT NULL,
    impuesto_id INT NOT NULL,
    tasa DECIMAL(10,2) NOT NULL COMMENT 'TASA DEL IMPUESTO EN EL PERIODO',
    estado ENUM('ACTIVO', 'INACTIVO') NOT NULL COMMENT 'ESTADO DEL IMPUESTO EN EL PERIODO',
    CONSTRAINT IMPPER_unico UNIQUE (periodo_id, impuesto_id),
    CONSTRAINT IMPPER_impuesto_FK FOREIGN KEY (impuesto_id) REFERENCES IMPUESTO (id),
    CONSTRAINT IMPPER_periodo_FK FOREIGN KEY (periodo_id) REFERENCES PERIODO (id)
) ENGINE=InnoDB;

CREATE TABLE IMPUESTO_DOCUMENTO (
    id INT AUTO_INCREMENT NOT NULL,
    monto DECIMAL(10,2) NOT NULL COMMENT 'MONTO DEL DOCUMENTO IMPUESTO',
    documento_de_ventas_numero INT,
    documento_compras_numero INT,
    impuesto_periodo_periodo_id INT NOT NULL,
    impuesto_periodo_impuesto_id INT NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT IMPDOC_DOCCOM_FK FOREIGN KEY (documento_compras_numero) REFERENCES DOCUMENTO_COMPRAS (numero),
    CONSTRAINT IMPDOC_DOCVEN_FK FOREIGN KEY (documento_de_ventas_numero) REFERENCES DOCUMENTO_DE_VENTAS (numero),
    CONSTRAINT IMPDOC_IMPPER_FK FOREIGN KEY (impuesto_periodo_periodo_id, impuesto_periodo_impuesto_id) 
        REFERENCES IMPUESTO_PERIODO (periodo_id, impuesto_id)
) ENGINE=InnoDB;

CREATE TABLE MONEDA (
    id INT AUTO_INCREMENT NOT NULL,
    codigo VARCHAR(3) CHARACTER SET utf8mb4 NOT NULL COMMENT 'CODIGO DE LA MONEDA',
    nombre VARCHAR(20) CHARACTER SET utf8mb4 NOT NULL COMMENT 'NOMBRE DE LA MONEDA',
    PRIMARY KEY (id)
) ENGINE=InnoDB;

CREATE TABLE MONEDA_PERIODO (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    moneda_id INT NOT NULL,
    periodo_id INT NOT NULL,
    tipoCambio ENUM('COMPRA', 'VENTA') NOT NULL COMMENT 'TIPO DE CAMBIO',
    estado ENUM('ACTIVO', 'INACTIVO') COMMENT 'ESTADO DEL TIPO DE CAMBIO POR PERIODO',
    valor DECIMAL(10,4) NOT NULL COMMENT 'VALOR DEL TIPO DE CAMBIO POR PERIODO',
    CONSTRAINT MONPER_unique UNIQUE (moneda_id, periodo_id, tipoCambio),
    CONSTRAINT MONPER_moneda_FK FOREIGN KEY (moneda_id) REFERENCES MONEDA (id),
    CONSTRAINT MONPER_periodo_FK FOREIGN KEY (periodo_id) REFERENCES PERIODO (id)
) ENGINE=InnoDB;


CREATE TABLE METODO_DE_PAGO (
    id INT AUTO_INCREMENT NOT NULL,
    nombre VARCHAR(30) CHARACTER SET utf8mb4 NOT NULL COMMENT 'NOMBRE DEL METODO DE PAGO',
    descripcion VARCHAR(30) CHARACTER SET utf8mb4 NOT NULL COMMENT 'DESCRIPCION DEL METODO DE PAGO',
    estado ENUM('ACTIVO', 'INACTIVO') NOT NULL COMMENT 'ESTADO DEL METODO DE PAGO',
    PRIMARY KEY (id)
) ENGINE=InnoDB;

CREATE TABLE PAGO (
    id INT AUTO_INCREMENT NOT NULL,
    monto DECIMAL(10,2) NOT NULL COMMENT 'MONTO DE PAGO',
    fecha_pago DATE NOT NULL COMMENT 'FECHA EN LA QUE SE EFECTUO EL PAGO',
	estado ENUM('PENDIENTE', 'PROCESADO', 'COMPLETADO', 'FALLIDO', 'CANCELADO', 'REEMBOLSADO', 'EN_REVISION', 'PROGRAMADO') NOT NULL,
    referencia VARCHAR(50) CHARACTER SET utf8mb4 COMMENT 'REFERENCIA DE PAGO',
    documento_de_ventas_numero INT,
    documento_de_compras_numero INT,
    metodo_de_pago_id INT NOT NULL,
    moneda_periodo_id INT NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT pago_DOCVEN_FK FOREIGN KEY (documento_de_ventas_numero) REFERENCES DOCUMENTO_DE_VENTAS (numero),
    CONSTRAINT pago_DOCCOM_FK FOREIGN KEY (documento_de_compras_numero) REFERENCES DOCUMENTO_COMPRAS (numero),
    CONSTRAINT pago_METPAGO_FK FOREIGN KEY (metodo_de_pago_id) REFERENCES METODO_DE_PAGO (id),
    CONSTRAINT pago_MONPER_FK FOREIGN KEY (moneda_periodo_id) REFERENCES MONEDA_PERIODO (id)
) ENGINE=InnoDB;

CREATE TABLE LOG (
    id INT AUTO_INCREMENT NOT NULL,
    accion VARCHAR(200) CHARACTER SET utf8mb4 NOT NULL COMMENT 'ACCION DEL LOGGIN',
    fecha DATE NOT NULL COMMENT 'FECHA DEL LOGGIN',
    usuario_id INT NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT log_usuario_FK FOREIGN KEY (usuario_id) REFERENCES USUARIO (id)
) ENGINE=InnoDB;

-- NUEVA TABLA RECUPERACION CONTRASEÑA --

CREATE TABLE TOKEN_RECUPERACION (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT NOT NULL,
    token VARCHAR(255) UNIQUE NOT NULL,
    fecha_expiracion DATETIME NOT NULL,
    usado BOOLEAN DEFAULT FALSE,
    CONSTRAINT fk_usuario FOREIGN KEY (usuario_id) REFERENCES USUARIO(id)
) ENGINE=InnoDB;
